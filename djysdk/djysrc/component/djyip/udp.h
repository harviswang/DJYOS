//----------------------------------------------------
// Copyright (c) 2014, SHENZHEN PENGRUI SOFT CO LTD. All rights reserved.

// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions are met:

// 1. Redistributions of source code must retain the above copyright notice, 
//    this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright notice, 
//    this list of conditions and the following disclaimer in the documentation 
//    and/or other materials provided with the distribution.
// 3. As a constituent part of djyos,do not transplant it to other software
//    without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//-----------------------------------------------------------------------------
// Copyright (c) 2014 著作权由深圳鹏瑞软件有限公司所有。著作权人保留一切权利。
// 
// 这份授权条款，在使用者符合以下三条件的情形下，授予使用者使用及再散播本
// 软件包装原始码及二进位可执行形式的权利，无论此包装是否经改作皆然：
// 
// 1. 对于本软件源代码的再散播，必须保留上述的版权宣告、本条件列表，以
//    及下述的免责声明。
// 2. 对于本套件二进位可执行形式的再散播，必须连带以文件以及／或者其他附
//    于散播包装中的媒介方式，重制上述之版权宣告、本条件列表，以及下述
//    的免责声明。
// 3. 本软件作为都江堰操作系统的组成部分，未获事前取得书面许可，不允许移植到非
//    都江堰操作系统环境下运行。

// 免责声明：本软件是本软件版权持有人以及贡献者以现状（"as is"）提供，
// 本软件包装不负任何明示或默示之担保责任，包括但不限于就适售性以及特定目
// 的的适用性为默示性担保。版权持有人及本软件之贡献者，无论任何条件、
// 无论成因或任何责任主义、无论此责任为因合约关系、无过失责任主义或因非违
// 约之侵权（包括过失或其他原因等）而起，对于任何因使用本软件包装所产生的
// 任何直接性、间接性、偶发性、特殊性、惩罚性或任何结果的损害（包括但不限
// 于替代商品或劳务之购用、使用损失、资料损失、利益损失、业务中断等等），
// 不负任何责任，即在该种使用已获事前告知可能会造成此类损害的情形下亦然。
//-----------------------------------------------------------------------------
// =============================================================================
// Copyright (C) 2012-2020 长园继保自动化有限公司 All Rights Reserved
// 模块描述: Udp.h
// 模块版本: V1.00
// 创建人员: ZQF
// 创建时间: 上午11:01:20/2014-12-2
// =============================================================================
// 程序修改记录(最新的放在最前面):
// <版本号> <修改日期>, <修改人员>: <修改功能概述>
// =============================================================================

#ifndef UDP_H_
#define UDP_H_

#include "stdint.h"
#include "Socket.h"

typedef struct
{
	u16 portsrc;
	u16 portdst;
	u16 msglen;
	u16 chksum;
}tagUdpHdr;

//UDP communication channel controller
typedef struct
{
//    //when accept. the sestablished and open =0 will bingo
//    u8 open :1;
//    //when closed, this bit will be set
//    u8 close:1;
//    //the following control the app read/write and kernel read/write
//    //they all means more new data,not include the retransmit
//    u8 asnd:1;    //1 means the app could write while 0 not
//    u8 arcv:1;    //1 means the app could read while 0 not
//    u8 ksnd:1;    //1 means the stack kernel could snd more new data while 0 not
//    u8 krcv:1;    //1 means the stack kernel could rcv more new data while 0 not
    u8 open;
    //when closed, this bit will be set
    u8 close;
    //the following control the app read/write and kernel read/write
    //they all means more new data,not include the retransmit
    u8 asnd;    //1 means the app could write while 0 not
    u8 arcv;    //1 means the app could read while 0 not
    u8 ksnd;    //1 means the stack kernel could snd more new data while 0 not
    u8 krcv;    //1 means the stack kernel could rcv more new data while 0 not
}tagUdpChannelstate;
//每个远端SOCKET有且只有一个TCB
typedef struct
{
	tagSocket                   *owner;            //该TCB的拥有者
	tagSocketNetAddr            raddr;             //远端通信地址
	u8                          cbstate;
#define CN_UDP_TERMINAL_LIFE    0x10
	u8                          lifetick;          //exist time
    //算法控制块，acknodelay等
	tagUdpChannelstate     	    channelstate;      //tcb的打开关闭状态
//tcp data buf,snd buf (include unacked buf) and rcv buf (include recombination buf)
#define CN_UDP_BUF_LEN_lIMIT    0x2000      //8KB
	tagSocketBuf     	        sbuf;              //snd buffer
    tagSocketBuf     	        rbuf;              //rcv buffer
}tagUCB;
//tcp server node, used to hange the communication client
typedef struct
{
	u32                        connum;              //已经通信的远端个数（包括正在链接的）
	u32                        connumlimit;         //远端个数限制
	u32                        connum2accept;
	tagSocket                  *clientlst;          //used to hange the client
}tagUdpTnode;
#endif /* UDP_H_ */
